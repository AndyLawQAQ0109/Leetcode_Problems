/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if(root == NULL) return NULL;
        Node *iter = root;
        Node *l = root->left;
        Node *r = root->right;
        if(l != NULL && r != NULL){
            l->next = r; 
            if(root->next != NULL)
                r->next = root->next->left;
            // if(l->right != NULL && l->next != NULL)
            //     l->right->next = l->next->left;                 
        }
        connect(iter->left);
        connect(iter->right);
        return root;
    }
    
};
