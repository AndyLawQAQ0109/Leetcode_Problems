class Solution {
public:
    int search(vector<int>& nums, int target) {
        int start = 0, end = nums.size() - 1;
        
        while(start <= end){
            int midd = (start + end) / 2;
            if(target == nums[midd]) return midd;
            else{
                if(nums[midd] >= nums[start]){ // left in upper level order
                    if(target >= nums[start] && target < nums[midd]){
                        cout<<"Left ulo -- left\n";
                        end = midd;
                    }
                    else{
                        cout<<"Left ulo -- right\n";
                        start = midd + 1;
                    }
                }
                else if(nums[midd + 1] <= nums[end]){ // right in upper level order
                    if(target >= nums[midd + 1] && target <= nums[end]){
                        cout<<"Right ulo -- right\n";
                        start = midd + 1;
                    }
                    else{
                        cout<<"Right ulo -- left\n";
                        end = midd;
                    }
                }
            }    
        }
        return -1;
    }
    
};
