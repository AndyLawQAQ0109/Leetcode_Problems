class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        if(nums.size() == 1){
            nums[0] *= nums[0];
            return nums;
        }

        if(nums[0] >= 0){
            for(int i=0; i<nums.size(); i++)
                nums[i] *= nums[i];
            return nums;
        }
        else if(nums[nums.size() - 1] < 0){
            vector<int> ans;
            for(int i=nums.size()-1; i>-1; i--)
                ans.push_back(nums[i]*nums[i]);
            return ans;
        }
        else{
            int i = 0, j;
            while(i < nums.size() && nums[i] < 0){
                if(nums[i] < 0) i++;
            }
            j = i;
            i -= 1;

            vector<int> ans;
            while(j < nums.size() && i > -1){
                if(abs(nums[i]) <= abs(nums[j]))
                    ans.push_back(nums[i--]);
                else
                    ans.push_back(nums[j++]);
            }
            if(i == -1)
                while(j < nums.size())
                    ans.push_back(nums[j++]);
            else if(j == nums.size())
                while(i > -1) 
                    ans.push_back(nums[i--]);
            
            for(int k=0; k<ans.size(); k++)
                ans[k] *= ans[k];
            return ans;
        }
        
    }
};
