/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        if(root1 == nullptr) return root2;
        if(root2 == nullptr) return root1;

        TreeNode *res = dfs(root1, root2);
        return res;
    }
    TreeNode* dfs(TreeNode *iter1, TreeNode *iter2){
        if(iter1 == nullptr && iter2 == nullptr){
            return nullptr;
        }
        else if(iter1 == nullptr){
            return iter2;
        }
        else if(iter2 == nullptr){
            return iter1;
        }
        else{
            TreeNode *res = new TreeNode(iter1->val + iter2->val);
            res->left = dfs(iter1->left, iter2->left);
            res->right = dfs(iter1->right, iter2->right);
            return res;
        }
        
    }
};
