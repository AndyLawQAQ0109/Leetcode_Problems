class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        if(triangle.size() == 1) return triangle[0][0];
        if(triangle.size() == 2) return min(triangle[0][0] + triangle[1][0], triangle[0][0] + triangle[1][1]);

        vector<vector<int>> dp = triangle;
        dp[1][0] = dp[0][0] + dp[1][0];
        dp[1][1] = dp[0][0] + dp[1][1];
        for(int i=2; i<dp.size(); i++){
            for(int j=0; j<dp[i].size(); j++){
                if(j == 0){
                    dp[i][0] = dp[i-1][0] + triangle[i][0];
                    dp[i][1] = dp[i-1][0] + triangle[i][1];
                }
                else if(j == dp[i].size() - 1){
                    dp[i][j] = dp[i][j] + dp[i-1][j-1];
                }
                else{
                    int t1 = triangle[i][j] + dp[i-1][j-1];
                    int t2 = triangle[i][j] + dp[i-1][j];
                    dp[i][j] = min(t1, t2);
                } 
            }
        }

        int m = dp[dp.size()-1][0];
        for(int i: dp[dp.size()-1]){
            if(i < m) m = i;
        }
        return m;
    }
};
